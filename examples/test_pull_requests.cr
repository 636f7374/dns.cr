require "../src/dns.cr"

concurrent_mutex = Mutex.new :unchecked
concurrent_fibers = Set(Fiber).new

main_concurrent_fibers = spawn do
  # Case #2: [DNS TXT Records > 255 incorrectly threw an exception...]

  fiber_case_2 = spawn do
    payload_memory = IO::Memory.new Bytes[227, 55, 129, 128, 0, 1, 0, 1, 0, 0, 0, 0, 6, 103, 105, 116, 104, 117, 98, 3, 99, 111, 109, 0, 0, 16, 0, 1, 192, 12, 0, 16, 0, 1, 0, 0, 12, 215, 1, 175, 255, 118, 61, 115, 112, 102, 49, 32, 105, 112, 52, 58, 49, 57, 50, 46, 51, 48, 46, 50, 53, 50, 46, 48, 47, 50, 50, 32, 105, 110, 99, 108, 117, 100, 101, 58, 95, 110, 101, 116, 98, 108, 111, 99, 107, 115, 46, 103, 111, 111, 103, 108, 101, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 95, 110, 101, 116, 98, 108, 111, 99, 107, 115, 50, 46, 103, 111, 111, 103, 108, 101, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 95, 110, 101, 116, 98, 108, 111, 99, 107, 115, 51, 46, 103, 111, 111, 103, 108, 101, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 115, 112, 102, 46, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 46, 111, 117, 116, 108, 111, 111, 107, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 109, 97, 105, 108, 46, 122, 101, 110, 100, 101, 115, 107, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 95, 115, 112, 102, 46, 115, 97, 108, 101, 115, 102, 111, 114, 99, 101, 46, 99, 111, 109, 32, 105, 110, 99, 108, 117, 100, 101, 58, 115, 101, 114, 118, 101, 114, 115, 46, 109, 99, 115, 118, 46, 110, 101, 116, 32, 105, 112, 52, 58, 49, 54, 54, 46, 55, 56, 46, 54, 57, 46, 49, 54, 57, 32, 105, 112, 52, 58, 49, 174, 54, 54, 46, 55, 56, 46, 54, 57, 46, 49, 55, 48, 32, 105, 112, 52, 58, 49, 54, 54, 46, 55, 56, 46, 55, 49, 46, 49, 51, 49, 32, 105, 112, 52, 58, 49, 54, 55, 46, 56, 57, 46, 49, 48, 49, 46, 50, 32, 105, 112, 52, 58, 49, 54, 55, 46, 56, 57, 46, 49, 48, 49, 46, 49, 57, 50, 47, 50, 56, 32, 105, 112, 52, 58, 49, 57, 50, 46, 50, 53, 52, 46, 49, 49, 50, 46, 54, 48, 32, 105, 112, 52, 58, 49, 57, 50, 46, 50, 53, 52, 46, 49, 49, 50, 46, 57, 56, 47, 51, 49, 32, 105, 112, 52, 58, 49, 57, 50, 46, 50, 53, 52, 46, 49, 49, 51, 46, 49, 48, 32, 105, 112, 52, 58, 49, 57, 50, 46, 50, 53, 52, 46, 49, 49, 51, 46, 49, 48, 49, 32, 105, 112, 52, 58, 49, 57, 50, 46, 50, 53, 52, 46, 49, 49, 52, 46, 49, 55, 54, 32, 126, 97, 108, 108]
    reply = DNS::Packet.from_io protocol_type: DNS::ProtocolType::UDP, io: payload_memory

    STDOUT.puts [reply]
  end

  concurrent_mutex.synchronize { concurrent_fibers << fiber_case_2 }
end

concurrent_mutex.synchronize { concurrent_fibers << main_concurrent_fibers }

loop do
  all_dead = concurrent_mutex.synchronize { concurrent_fibers.all? { |fiber| fiber.dead? } }
  next sleep 0.25_f32.seconds unless all_dead

  break
end
